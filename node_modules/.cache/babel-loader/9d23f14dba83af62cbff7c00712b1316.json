{"ast":null,"code":"var _jsxFileName = \"/Users/adammckenna/github-repos/worldle/src/components/Share.tsx\",\n    _s = $RefreshSig$();\n\nimport { DateTime, Interval } from \"luxon\";\nimport { useMemo } from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { computeProximityPercent, generateSquareCharacters, getDirectionEmoji } from \"../domain/geography\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst START_DATE = DateTime.fromISO(\"2022-01-21\");\nexport function Share(_ref) {\n  _s();\n\n  let {\n    guesses,\n    dayString,\n    settingsData,\n    hideImageMode,\n    rotationMode\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = settingsData;\n  const shareText = useMemo(() => {\n    var _guesses;\n\n    const win = ((_guesses = guesses[guesses.length - 1]) === null || _guesses === void 0 ? void 0 : _guesses.distance) === 0;\n    const bestDistance = Math.min(...guesses.map(_ref2 => {\n      let {\n        distance\n      } = _ref2;\n      return distance;\n    }));\n    const guessCount = win ? guesses.length : \"X\";\n    const dayCount = Math.floor(Interval.fromDateTimes(START_DATE, DateTime.fromISO(dayString)).length(\"day\"));\n    const difficultyModifierEmoji = hideImageMode ? \" ðŸ™ˆ\" : rotationMode ? \" ðŸŒ€\" : \"\";\n    const bestPercent = `(${computeProximityPercent(bestDistance).toString()}%)`;\n    const title = `#Worldle #${dayCount} ${guessCount}/6 ${bestPercent}${difficultyModifierEmoji}`;\n    const guessString = guesses.map(guess => {\n      const percent = computeProximityPercent(guess.distance);\n      const squares = generateSquareCharacters(percent, theme).join(\"\");\n      const direction = getDirectionEmoji(guess);\n      return `${squares}${direction}`;\n    }).join(\"\\n\");\n    return [title, guessString, \"https://worldle.teuteuf.fr\"].join(\"\\n\");\n  }, [dayString, guesses, hideImageMode, rotationMode, theme]);\n  return /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n    text: shareText,\n    onCopy: () => toast(t(\"copy\")),\n    options: {\n      format: \"text/plain\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"border-2 px-4 uppercase bg-green-600 hover:bg-green-500 active:bg-green-700 text-white w-full\",\n      children: t(\"share\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Share, \"suMF/NYds3l84bMoYKKwSYUTUi4=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Share;\n\nvar _c;\n\n$RefreshReg$(_c, \"Share\");","map":{"version":3,"sources":["/Users/adammckenna/github-repos/worldle/src/components/Share.tsx"],"names":["DateTime","Interval","useMemo","CopyToClipboard","useTranslation","toast","computeProximityPercent","generateSquareCharacters","getDirectionEmoji","React","START_DATE","fromISO","Share","guesses","dayString","settingsData","hideImageMode","rotationMode","t","theme","shareText","win","length","distance","bestDistance","Math","min","map","guessCount","dayCount","floor","fromDateTimes","difficultyModifierEmoji","bestPercent","toString","title","guessString","guess","percent","squares","join","direction","format"],"mappings":"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","sourcesContent":["import { DateTime, Interval } from \"luxon\";\nimport { useMemo } from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport {\n  computeProximityPercent,\n  generateSquareCharacters,\n  getDirectionEmoji,\n} from \"../domain/geography\";\nimport { Guess } from \"../domain/guess\";\nimport React from \"react\";\nimport { SettingsData } from \"../hooks/useSettings\";\n\nconst START_DATE = DateTime.fromISO(\"2022-01-21\");\n\ninterface ShareProps {\n  guesses: Guess[];\n  dayString: string;\n  settingsData: SettingsData;\n  hideImageMode: boolean;\n  rotationMode: boolean;\n}\n\nexport function Share({\n  guesses,\n  dayString,\n  settingsData,\n  hideImageMode,\n  rotationMode,\n}: ShareProps) {\n  const { t } = useTranslation();\n  const { theme } = settingsData;\n\n  const shareText = useMemo(() => {\n    const win = guesses[guesses.length - 1]?.distance === 0;\n    const bestDistance = Math.min(...guesses.map(({ distance }) => distance));\n    const guessCount = win ? guesses.length : \"X\";\n    const dayCount = Math.floor(\n      Interval.fromDateTimes(START_DATE, DateTime.fromISO(dayString)).length(\n        \"day\"\n      )\n    );\n    const difficultyModifierEmoji = hideImageMode\n      ? \" ðŸ™ˆ\"\n      : rotationMode\n      ? \" ðŸŒ€\"\n      : \"\";\n    const bestPercent = `(${computeProximityPercent(\n      bestDistance\n    ).toString()}%)`;\n    const title = `#Worldle #${dayCount} ${guessCount}/6 ${bestPercent}${difficultyModifierEmoji}`;\n\n    const guessString = guesses\n      .map((guess) => {\n        const percent = computeProximityPercent(guess.distance);\n        const squares = generateSquareCharacters(percent, theme).join(\"\");\n        const direction = getDirectionEmoji(guess);\n        return `${squares}${direction}`;\n      })\n      .join(\"\\n\");\n\n    return [title, guessString, \"https://worldle.teuteuf.fr\"].join(\"\\n\");\n  }, [dayString, guesses, hideImageMode, rotationMode, theme]);\n\n  return (\n    <CopyToClipboard\n      text={shareText}\n      onCopy={() => toast(t(\"copy\"))}\n      options={{\n        format: \"text/plain\",\n      }}\n    >\n      <button className=\"border-2 px-4 uppercase bg-green-600 hover:bg-green-500 active:bg-green-700 text-white w-full\">\n        {t(\"share\")}\n      </button>\n    </CopyToClipboard>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}