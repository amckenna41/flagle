{"ast":null,"code":"var _jsxFileName = \"/Users/adammckenna/github-repos/worldle/src/components/panels/Settings.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Panel } from \"./Panel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Settings(_ref) {\n  _s();\n\n  let {\n    isOpen,\n    close,\n    settingsData,\n    updateSettings\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    title: t(\"settings.title\"),\n    isOpen: isOpen,\n    close: close,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"setting-distanceUnit\",\n          className: \"h-8 dark:bg-slate-800\",\n          value: settingsData.distanceUnit,\n          onChange: e => updateSettings({\n            distanceUnit: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"km\",\n            children: \"KM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"miles\",\n            children: \"Miles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex-1 ml-2 flex items-center\",\n          htmlFor: \"setting-distanceUnit\",\n          children: t(\"settings.distanceUnit\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"setting-theme\",\n          className: \"h-8 dark:bg-slate-800\",\n          value: settingsData.theme,\n          onChange: e => updateSettings({\n            theme: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"light\",\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dark\",\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex-1 ml-2 flex items-center\",\n          htmlFor: \"setting-theme\",\n          children: t(\"settings.theme\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold\",\n          children: t(\"settings.difficultyModifiers\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm italic text-gray-500\",\n          children: t(\"settings.startingNextDay\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"setting-noImage\",\n          checked: settingsData.noImageMode,\n          onChange: e => updateSettings({\n            noImageMode: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex-1 ml-2\",\n          htmlFor: \"setting-noImage\",\n          children: t(\"settings.noImageMode\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"setting-rotationMode\",\n          checked: settingsData.rotationMode,\n          onChange: e => updateSettings({\n            rotationMode: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex-1 ml-2\",\n          htmlFor: \"setting-rotationMode\",\n          children: t(\"settings.rotationMode\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Settings, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/adammckenna/github-repos/worldle/src/components/panels/Settings.tsx"],"names":["React","useTranslation","Panel","Settings","isOpen","close","settingsData","updateSettings","t","distanceUnit","e","target","value","theme","noImageMode","checked","rotationMode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { SettingsData } from \"../../hooks/useSettings\";\nimport { Panel } from \"./Panel\";\n\ninterface SettingsProps {\n  isOpen: boolean;\n  close: () => void;\n  settingsData: SettingsData;\n  updateSettings: (newSettings: Partial<SettingsData>) => void;\n}\n\nexport function Settings({\n  isOpen,\n  close,\n  settingsData,\n  updateSettings,\n}: SettingsProps) {\n  const { t } = useTranslation();\n\n  return (\n    <Panel title={t(\"settings.title\")} isOpen={isOpen} close={close}>\n      <div className=\"my-4\">\n        <div className=\"flex p-1\">\n          <select\n            id=\"setting-distanceUnit\"\n            className=\"h-8 dark:bg-slate-800\"\n            value={settingsData.distanceUnit}\n            onChange={(e) =>\n              updateSettings({ distanceUnit: e.target.value as \"km\" | \"miles\" })\n            }\n          >\n            <option value=\"km\">KM</option>\n            <option value=\"miles\">Miles</option>\n          </select>\n          <label\n            className=\"flex-1 ml-2 flex items-center\"\n            htmlFor=\"setting-distanceUnit\"\n          >\n            {t(\"settings.distanceUnit\")}\n          </label>\n        </div>\n        <div className=\"flex p-1\">\n          <select\n            id=\"setting-theme\"\n            className=\"h-8 dark:bg-slate-800\"\n            value={settingsData.theme}\n            onChange={(e) =>\n              updateSettings({ theme: e.target.value as \"light\" | \"dark\" })\n            }\n          >\n            <option value=\"light\">Light</option>\n            <option value=\"dark\">Dark</option>\n          </select>\n          <label\n            className=\"flex-1 ml-2 flex items-center\"\n            htmlFor=\"setting-theme\"\n          >\n            {t(\"settings.theme\")}\n          </label>\n        </div>\n      </div>\n      <div className=\"my-4\">\n        <header className=\"my-2\">\n          <h3 className=\"text-lg font-bold\">\n            {t(\"settings.difficultyModifiers\")}\n          </h3>\n          <div className=\"text-sm italic text-gray-500\">\n            {t(\"settings.startingNextDay\")}\n          </div>\n        </header>\n        <div className=\"flex p-1\">\n          <input\n            type=\"checkbox\"\n            id=\"setting-noImage\"\n            checked={settingsData.noImageMode}\n            onChange={(e) => updateSettings({ noImageMode: e.target.checked })}\n          />\n          <label className=\"flex-1 ml-2\" htmlFor=\"setting-noImage\">\n            {t(\"settings.noImageMode\")}\n          </label>\n        </div>\n        <div className=\"flex p-1\">\n          <input\n            type=\"checkbox\"\n            id=\"setting-rotationMode\"\n            checked={settingsData.rotationMode}\n            onChange={(e) => updateSettings({ rotationMode: e.target.checked })}\n          />\n          <label className=\"flex-1 ml-2\" htmlFor=\"setting-rotationMode\">\n            {t(\"settings.rotationMode\")}\n          </label>\n        </div>\n      </div>\n    </Panel>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}