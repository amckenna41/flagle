{"ast":null,"code":"var _jsxFileName = \"/Users/adammckenna/github-repos/worldle/src/components/GuessRow.tsx\",\n    _s = $RefreshSig$();\n\nimport { computeProximityPercent, formatDistance, generateSquareCharacters, getDirectionEmoji } from \"../domain/geography\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport { Twemoji } from \"@teuteuf/react-emoji-render\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SQUARE_ANIMATION_LENGTH = 250;\nexport function GuessRow(_ref) {\n  _s();\n\n  let {\n    guess,\n    settingsData,\n    countryInputRef\n  } = _ref;\n  const {\n    distanceUnit,\n    theme\n  } = settingsData;\n  const proximity = guess != null ? computeProximityPercent(guess.distance) : 0;\n  const squares = generateSquareCharacters(proximity, theme);\n  const [animationState, setAnimationState] = useState(\"NOT_STARTED\");\n  useEffect(() => {\n    if (guess == null) {\n      return;\n    }\n\n    setAnimationState(\"RUNNING\");\n    const timeout = setTimeout(() => {\n      setAnimationState(\"ENDED\");\n    }, SQUARE_ANIMATION_LENGTH * 6);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [guess]);\n  const handleClickOnEmptyRow = useCallback(() => {\n    if ((countryInputRef === null || countryInputRef === void 0 ? void 0 : countryInputRef.current) != null) {\n      countryInputRef === null || countryInputRef === void 0 ? void 0 : countryInputRef.current.focus();\n    }\n  }, [countryInputRef]);\n\n  switch (animationState) {\n    case \"NOT_STARTED\":\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleClickOnEmptyRow,\n        className: `col-span-7 h-8 bg-gray-200 dark:bg-slate-600`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n\n    case \"RUNNING\":\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex text-2xl w-full justify-evenly items-center col-span-6 border-2 h-8`,\n          children: squares.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"opacity-0 animate-reveal\",\n            style: {\n              animationDelay: `${SQUARE_ANIMATION_LENGTH * index}ms`\n            },\n            children: /*#__PURE__*/_jsxDEV(Twemoji, {\n              text: character\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center border-2 h-8 col-span-1 animate-reveal\",\n          children: /*#__PURE__*/_jsxDEV(CountUp, {\n            end: proximity,\n            suffix: \"%\",\n            duration: SQUARE_ANIMATION_LENGTH * 5 / 1000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n\n    case \"ENDED\":\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center border-2 h-8 col-span-3 animate-reveal\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-ellipsis overflow-hidden whitespace-nowrap\",\n            children: guess === null || guess === void 0 ? void 0 : guess.name.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center border-2 h-8 col-span-2 animate-reveal\",\n          children: guess && formatDistance(guess.distance, distanceUnit)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center border-2 h-8 col-span-1 animate-reveal\",\n          children: guess && /*#__PURE__*/_jsxDEV(Twemoji, {\n            text: getDirectionEmoji(guess)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center border-2 h-8 col-span-1 animate-reveal animate-pop\",\n          children: `${proximity}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n  }\n}\n\n_s(GuessRow, \"qtzF5H/cz58XTtQsSMFenBSZqQE=\");\n\n_c = GuessRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuessRow\");","map":{"version":3,"sources":["/Users/adammckenna/github-repos/worldle/src/components/GuessRow.tsx"],"names":["computeProximityPercent","formatDistance","generateSquareCharacters","getDirectionEmoji","React","useCallback","useEffect","useState","CountUp","Twemoji","SQUARE_ANIMATION_LENGTH","GuessRow","guess","settingsData","countryInputRef","distanceUnit","theme","proximity","distance","squares","animationState","setAnimationState","timeout","setTimeout","clearTimeout","handleClickOnEmptyRow","current","focus","map","character","index","animationDelay","name","toUpperCase"],"mappings":"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","sourcesContent":["import {\n  computeProximityPercent,\n  formatDistance,\n  generateSquareCharacters,\n  getDirectionEmoji,\n} from \"../domain/geography\";\nimport { Guess } from \"../domain/guess\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport CountUp from \"react-countup\";\nimport { SettingsData } from \"../hooks/useSettings\";\nimport { Twemoji } from \"@teuteuf/react-emoji-render\";\n\nconst SQUARE_ANIMATION_LENGTH = 250;\ntype AnimationState = \"NOT_STARTED\" | \"RUNNING\" | \"ENDED\";\n\ninterface GuessRowProps {\n  guess?: Guess;\n  settingsData: SettingsData;\n  countryInputRef?: React.RefObject<HTMLInputElement>;\n}\n\nexport function GuessRow({\n  guess,\n  settingsData,\n  countryInputRef,\n}: GuessRowProps) {\n  const { distanceUnit, theme } = settingsData;\n  const proximity = guess != null ? computeProximityPercent(guess.distance) : 0;\n  const squares = generateSquareCharacters(proximity, theme);\n\n  const [animationState, setAnimationState] =\n    useState<AnimationState>(\"NOT_STARTED\");\n\n  useEffect(() => {\n    if (guess == null) {\n      return;\n    }\n\n    setAnimationState(\"RUNNING\");\n    const timeout = setTimeout(() => {\n      setAnimationState(\"ENDED\");\n    }, SQUARE_ANIMATION_LENGTH * 6);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [guess]);\n\n  const handleClickOnEmptyRow = useCallback(() => {\n    if (countryInputRef?.current != null) {\n      countryInputRef?.current.focus();\n    }\n  }, [countryInputRef]);\n\n  switch (animationState) {\n    case \"NOT_STARTED\":\n      return (\n        <div\n          onClick={handleClickOnEmptyRow}\n          className={`col-span-7 h-8 bg-gray-200 dark:bg-slate-600`}\n        />\n      );\n    case \"RUNNING\":\n      return (\n        <>\n          <div\n            className={`flex text-2xl w-full justify-evenly items-center col-span-6 border-2 h-8`}\n          >\n            {squares.map((character, index) => (\n              <div\n                key={index}\n                className=\"opacity-0 animate-reveal\"\n                style={{\n                  animationDelay: `${SQUARE_ANIMATION_LENGTH * index}ms`,\n                }}\n              >\n                <Twemoji text={character} />\n              </div>\n            ))}\n          </div>\n          <div className=\"flex items-center justify-center border-2 h-8 col-span-1 animate-reveal\">\n            <CountUp\n              end={proximity}\n              suffix=\"%\"\n              duration={(SQUARE_ANIMATION_LENGTH * 5) / 1000}\n            />\n          </div>\n        </>\n      );\n    case \"ENDED\":\n      return (\n        <>\n          <div className=\"flex items-center justify-center border-2 h-8 col-span-3 animate-reveal\">\n            <p className=\"text-ellipsis overflow-hidden whitespace-nowrap\">\n              {guess?.name.toUpperCase()}\n            </p>\n          </div>\n          <div className=\"flex items-center justify-center border-2 h-8 col-span-2 animate-reveal\">\n            {guess && formatDistance(guess.distance, distanceUnit)}\n          </div>\n          <div className=\"flex items-center justify-center border-2 h-8 col-span-1 animate-reveal\">\n            {guess && <Twemoji text={getDirectionEmoji(guess)} />}\n          </div>\n          <div className=\"flex items-center justify-center border-2 h-8 col-span-1 animate-reveal animate-pop\">\n            {`${proximity}%`}\n          </div>\n        </>\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}