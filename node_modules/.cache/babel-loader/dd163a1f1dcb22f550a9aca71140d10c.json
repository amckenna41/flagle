{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nconst defaultSettingsData = {\n  noImageMode: false,\n  rotationMode: false,\n  distanceUnit: \"km\",\n  theme: window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\"\n};\n\nfunction loadSettings() {\n  const storedSettings = localStorage.getItem(\"settings\");\n  const settingsData = storedSettings != null ? JSON.parse(storedSettings) : {};\n  return { ...defaultSettingsData,\n    ...settingsData\n  };\n}\n\nexport function useSettings() {\n  _s();\n\n  const [settingsData, setSettingsData] = useState(loadSettings());\n  const updateSettingsData = useCallback(newSettings => {\n    const updatedSettings = { ...settingsData,\n      ...newSettings\n    };\n    setSettingsData(updatedSettings);\n    localStorage.setItem(\"settings\", JSON.stringify(updatedSettings));\n  }, [settingsData]);\n  return [settingsData, updateSettingsData];\n}\n\n_s(useSettings, \"eK89D0pw5Xy6XmXtagvc6wbvhwI=\");","map":{"version":3,"sources":["/Users/adammckenna/github-repos/worldle/src/hooks/useSettings.ts"],"names":["useCallback","useState","defaultSettingsData","noImageMode","rotationMode","distanceUnit","theme","window","matchMedia","matches","loadSettings","storedSettings","localStorage","getItem","settingsData","JSON","parse","useSettings","setSettingsData","updateSettingsData","newSettings","updatedSettings","setItem","stringify"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AASA,MAAMC,mBAAiC,GAAG;AACxCC,EAAAA,WAAW,EAAE,KAD2B;AAExCC,EAAAA,YAAY,EAAE,KAF0B;AAGxCC,EAAAA,YAAY,EAAE,IAH0B;AAIxCC,EAAAA,KAAK,EAAEC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAlD,GACH,MADG,GAEH;AANoC,CAA1C;;AASA,SAASC,YAAT,GAAsC;AACpC,QAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAvB;AACA,QAAMC,YAAY,GAAGH,cAAc,IAAI,IAAlB,GAAyBI,IAAI,CAACC,KAAL,CAAWL,cAAX,CAAzB,GAAsD,EAA3E;AACA,SAAO,EACL,GAAGT,mBADE;AAEL,OAAGY;AAFE,GAAP;AAID;;AAED,OAAO,SAASG,WAAT,GAGL;AAAA;;AACA,QAAM,CAACH,YAAD,EAAeI,eAAf,IAAkCjB,QAAQ,CAC9CS,YAAY,EADkC,CAAhD;AAIA,QAAMS,kBAAkB,GAAGnB,WAAW,CACnCoB,WAAD,IAAwC;AACtC,UAAMC,eAAe,GAAG,EACtB,GAAGP,YADmB;AAEtB,SAAGM;AAFmB,KAAxB;AAKAF,IAAAA,eAAe,CAACG,eAAD,CAAf;AACAT,IAAAA,YAAY,CAACU,OAAb,CAAqB,UAArB,EAAiCP,IAAI,CAACQ,SAAL,CAAeF,eAAf,CAAjC;AACD,GATmC,EAUpC,CAACP,YAAD,CAVoC,CAAtC;AAaA,SAAO,CAACA,YAAD,EAAeK,kBAAf,CAAP;AACD;;GAtBeF,W","sourcesContent":["import { useCallback, useState } from \"react\";\n\nexport interface SettingsData {\n  noImageMode: boolean;\n  rotationMode: boolean;\n  distanceUnit: \"km\" | \"miles\";\n  theme: \"light\" | \"dark\";\n}\n\nconst defaultSettingsData: SettingsData = {\n  noImageMode: false,\n  rotationMode: false,\n  distanceUnit: \"km\",\n  theme: window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n    ? \"dark\"\n    : \"light\",\n};\n\nfunction loadSettings(): SettingsData {\n  const storedSettings = localStorage.getItem(\"settings\");\n  const settingsData = storedSettings != null ? JSON.parse(storedSettings) : {};\n  return {\n    ...defaultSettingsData,\n    ...settingsData,\n  };\n}\n\nexport function useSettings(): [\n  SettingsData,\n  (newSettings: Partial<SettingsData>) => void\n] {\n  const [settingsData, setSettingsData] = useState<SettingsData>(\n    loadSettings()\n  );\n\n  const updateSettingsData = useCallback(\n    (newSettings: Partial<SettingsData>) => {\n      const updatedSettings = {\n        ...settingsData,\n        ...newSettings,\n      };\n\n      setSettingsData(updatedSettings);\n      localStorage.setItem(\"settings\", JSON.stringify(updatedSettings));\n    },\n    [settingsData]\n  );\n\n  return [settingsData, updateSettingsData];\n}\n"]},"metadata":{},"sourceType":"module"}