{"ast":null,"code":"var _jsxFileName = \"/Users/adammckenna/github-repos/worldle/src/components/panels/Panel.tsx\",\n    _s = $RefreshSig$();\n\nimport Modal from \"react-modal\";\nimport React, { useEffect, useState } from \"react\";\nimport { loadAllGuesses } from \"../../domain/guess\";\nimport { Twemoji } from \"@teuteuf/react-emoji-render\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Panel(_ref) {\n  _s();\n\n  let {\n    title,\n    isOpen,\n    close,\n    children\n  } = _ref;\n  const [debug, setDebug] = useState(0);\n  useEffect(() => {\n    setDebug(0);\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: close,\n    className: \"flex justify-center h-full\",\n    ariaHideApp: false,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-lg bg-white dark:bg-slate-900 dark:text-slate-100 text-sm overflow-auto px-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"border-b-2 border-gray-200 mb-3 flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold uppercase tracking-wide text-center my-1 flex-auto\",\n          onClick: () => setDebug(prev => prev + 1),\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: close,\n          children: /*#__PURE__*/_jsxDEV(Twemoji, {\n            text: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), children, debug >= 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"!!!\", JSON.stringify(loadAllGuesses())]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Panel, \"SdinmehLUP+mGbVtSL5IF1j9kTY=\");\n\n_c = Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"sources":["/Users/adammckenna/github-repos/worldle/src/components/panels/Panel.tsx"],"names":["Modal","React","useEffect","useState","loadAllGuesses","Twemoji","Panel","title","isOpen","close","children","debug","setDebug","prev","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,OAAT,QAAwB,6BAAxB;;AASA,OAAO,SAASC,KAAT,OAA+D;AAAA;;AAAA,MAAhD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,GAAgD;AACpE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAFQ,EAEN,CAACJ,MAAD,CAFM,CAAT;AAIA,sBACE,QAAC,KAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,cAAc,EAAEC,KAFlB;AAGE,IAAA,SAAS,EAAC,4BAHZ;AAIE,IAAA,WAAW,EAAE,KAJf;AAAA,2BAME;AAAK,MAAA,SAAS,EAAC,2FAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,sCAAlB;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,uEADZ;AAEE,UAAA,OAAO,EAAE,MAAMG,QAAQ,CAAEC,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAFzB;AAAA,oBAIGN;AAJH;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEE,KAA/B;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAYGC,QAZH,EAaGC,KAAK,IAAI,CAAT,iBAAc;AAAA,0BAASG,IAAI,CAACC,SAAL,CAAeX,cAAc,EAA7B,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA,cAbjB;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA9BeE,K;;KAAAA,K","sourcesContent":["import Modal from \"react-modal\";\nimport React, { useEffect, useState } from \"react\";\nimport { loadAllGuesses } from \"../../domain/guess\";\nimport { Twemoji } from \"@teuteuf/react-emoji-render\";\n\ninterface PanelProps {\n  title: string;\n  isOpen: boolean;\n  close: () => void;\n  children?: React.ReactNode;\n}\n\nexport function Panel({ title, isOpen, close, children }: PanelProps) {\n  const [debug, setDebug] = useState(0);\n  useEffect(() => {\n    setDebug(0);\n  }, [isOpen]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={close}\n      className=\"flex justify-center h-full\"\n      ariaHideApp={false}\n    >\n      <div className=\"w-full max-w-lg bg-white dark:bg-slate-900 dark:text-slate-100 text-sm overflow-auto px-2\">\n        <header className=\"border-b-2 border-gray-200 mb-3 flex\">\n          <h2\n            className=\"text-2xl font-bold uppercase tracking-wide text-center my-1 flex-auto\"\n            onClick={() => setDebug((prev) => prev + 1)}\n          >\n            {title}\n          </h2>\n          <button type=\"button\" onClick={close}>\n            <Twemoji text=\"❌\" />\n          </button>\n        </header>\n        {children}\n        {debug >= 5 && <div>!!!{JSON.stringify(loadAllGuesses())}</div>}\n      </div>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}